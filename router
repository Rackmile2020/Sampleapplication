// eligibility.guard.ts
import { Injectable } from '@angular/core';
import { CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';
import { Observable, map } from 'rxjs';
import { MembershipService } from './membership.service'; // <-- your API/store service

@Injectable({ providedIn: 'root' })
export class EligibilityGuard implements CanActivateChild {
  constructor(private membershipService: MembershipService, private router: Router) {}

  canActivateChild(
    childRoute: ActivatedRouteSnapshot,
    state: RouterStateSnapshot
  ): Observable<boolean> {
    const memberId = childRoute.parent?.paramMap.get('id'); // get :id from parent

    return this.membershipService.isEligible(memberId).pipe(
      map(eligible => {
        if (!eligible) {
          this.router.navigate(['/home']); // redirect if not eligible
          return false;
        }
        return true;
      })
    );
  }
}

 canActivateChild: [EligibilityGuard],   
