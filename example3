import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class BootstrapLoaderService {

  private bootstrapFileName = 'bootstrap.min.css'; // üëà adjust if different

  /**
   * Finds the Bootstrap <link> element by filename in href
   */
  private findBootstrapLink(): HTMLLinkElement | null {
    const links = Array.from(document.getElementsByTagName('link'));
    return links.find(l =>
      l.rel === 'stylesheet' &&
      l.href.includes(this.bootstrapFileName)
    ) as HTMLLinkElement | null;
  }

  /**
   * Waits until Bootstrap CSS is fully loaded
   */
  waitForBootstrap(): Promise<void> {
    return new Promise(resolve => {
      const link = this.findBootstrapLink();

      if (!link) {
        console.warn(`‚ö†Ô∏è Bootstrap CSS (${this.bootstrapFileName}) not found in DOM`);
        resolve();
        return;
      }

      // Already loaded
      if (link.sheet) {
        resolve();
        return;
      }

      // Wait for load event
      link.addEventListener('load', () => {
        console.log('‚úÖ Bootstrap CSS loaded');
        resolve();
      }, { once: true });

      // Fallback: resolve after some time if "load" never fires
      setTimeout(() => {
        if (link.sheet) {
          console.log('‚ö†Ô∏è Resolved by fallback check (stylesheet available)');
          resolve();
        }
      }, 3000);
    });
  }
}
