    const regex = new RegExp(`(>[^<]*)(${query})([^<]*<)`, "gi");
LoadSearch() {
  this.searchService.query$.subscribe((query) => {
    if (!query) {
      this.sanitizedHtml = [];
      this.highlightedHeadings = [];
      return;
    }

    // regex to highlight only inside text (between > and <)
    const regex = new RegExp(`(>[^<]*)(${query})([^<]*<)`, "gi");

    this.sanitizedHtml = [];
    this.highlightedHeadings = [];

    this.whatsCoveredData?.benefits?.forEach((item, index) => {
      let match = false;

      // Highlight heading
      let heading = this.toTitleCaseIfAllCaps(item?.heading);
      if (query && new RegExp(query, "i").test(heading)) {
        heading = heading.replace(
          new RegExp(`(${query})`, "gi"),
          '<mark class="highlight">$1</mark>'
        );
        match = true;
        this.highlightedHeadings[index] = heading;
      }

      // Highlight content
      let content = item.data;
      if (query && regex.test(content)) {
        content = content.replace(
          regex,
          `$1<mark class="highlight">$2</mark>$3`
        );
        match = true;
        this.sanitizedHtml[index] =
          this.sanitizer.bypassSecurityTrustHtml(content);
      }

      // Expand if matched
      item.expanded = match;
    });
  });
}
