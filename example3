// src/app/remote-guards.ts
import { inject, Injector } from '@angular/core';
import { CanActivateChildFn } from '@angular/router';
import { loadRemoteModule } from '@angular-architects/module-federation';

async function getEligibilityGuardInstance() {
  const m = await loadRemoteModule({
    type: 'module',
    remoteEntry: 'http://localhost:4200/remoteEntry.js', // parent remote
    exposedModule: './EligibilityGuard'
  });

  const GuardClass = m.EligibilityGuard;

  // Get current root injector (from running Angular app)
  const rootInjector = inject(Injector);

  // Create instance of guard with DI
  const childInjector = Injector.create({
    providers: [
      { provide: GuardClass, useClass: GuardClass, deps: [] } // âœ… deps auto-resolved
    ],
    parent: rootInjector
  });

  return childInjector.get(GuardClass);
}

export const eligibilityProxyGuard: CanActivateChildFn = async (route, state) => {
  const guard = await getEligibilityGuardInstance();
  return guard.canActivateChild(route, state);
};
