import { Injectable } from '@angular/core';
import { Router, NavigationStart } from '@angular/router';
import { filter } from 'rxjs/operators';

@Injectable({ providedIn: 'root' })
export class NavigationHistoryService {
  private history: string[] = [];
  private isBack = false;

  constructor(private router: Router) {
    this.router.events
      .pipe(filter(e => e instanceof NavigationStart))
      .subscribe((event: any) => {
        this.isBack = event.navigationTrigger === 'popstate';

        if (!this.isBack) {
          // Only push forward navigations to history
          if (!this.history.length || this.history[this.history.length - 1] !== event.url) {
            this.history.push(event.url);
          }
        } else {
          // popstate: remove last URL (current) from history
          this.history.pop();
        }
      });
  }

  getPreviousUrl(): string | null {
    return this.history.length > 0 ? this.history[this.history.length - 1] : null;
  }

  isBackNavigation(): boolean {
    return this.isBack;
  }
}
