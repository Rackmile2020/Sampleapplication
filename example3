this.router.events
  .pipe(filter(e => e instanceof NavigationStart))
  .subscribe((event: any) => {
    const currentUrl = event.url;
    this.isBack = event.navigationTrigger === 'popstate';

    if (!this.isBack) {
      const lastUrl = this.history.length ? this.history[this.history.length - 1] : null;

      // ðŸ”¹ Special case: forward from /medical/data â†’ /medical/1/data
      if (lastUrl === '/medical/data' &&
          currentUrl.startsWith('/medical/') &&
          currentUrl.endsWith('/data') &&
          currentUrl !== '/medical/data') {
        // Instead of keeping /medical/data, mark it to be skipped on back
        // Push current URL but mark last as skip
        this.history[this.history.length - 1] = '__skip__' + lastUrl;
        this.history.push(currentUrl);
      } else {
        if (!this.history.length || lastUrl !== currentUrl) {
          this.history.push(currentUrl);
        }
      }
    } else {
      // Browser back
      if (this.history.length) {
        this.history.pop();
      }
    }
  });
