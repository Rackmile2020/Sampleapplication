 try {
      const res: MembershipResponse = await this.membershipService.getMembership(memberId);

      // ❌ Case 1: invalid member
      if (res === false) {
        return this.router.createUrlTree(['/home']);
      }

      // 🔀 Case 2: redirectUrl
      if ('redirectUrl' in res) {
        return this.router.createUrlTree([res.redirectUrl]);
      }

      // ✅ Case 3: allowed tabs
      if ('allowedTabs' in res) {
        const isAllowed = res.allowedTabs.some(tab => tab.id === requestedTab);
        return isAllowed ? true : this.router.createUrlTree(['/home']);
      }

      return this.router.createUrlTree(['/home']);
    } catch (err) {
      return this.router.createUrlTree(['/home']);
    }
