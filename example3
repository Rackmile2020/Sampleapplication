LoadSearch() {
  this.searchService.query$.subscribe((query) => {
    this.sanitizedHtml = [];
    this.highlightedHeadings = [];

    if (!query) {
      // show original if no query
      this.whatsCoveredData?.benefits?.forEach((item, index) => {
        this.highlightedHeadings[index] = this.toTitleCaseIfAllCaps(item?.heading);
        this.sanitizedHtml[index] = this.sanitizer.bypassSecurityTrustHtml(item.data);
        item.expanded = false;
      });
      return;
    }

    const headingRegex = new RegExp(`(${query})`, "gi");
    const contentRegex = new RegExp(`(${query})(?![^<]*>)`, "gi");
    // â¬† matches query but not inside tag attributes

    this.whatsCoveredData?.benefits?.forEach((item, index) => {
      let match = false;

      /** ðŸ”¹ Headings */
      let heading = this.toTitleCaseIfAllCaps(item?.heading) || "";
      if (headingRegex.test(heading)) {
        heading = heading.replace(
          headingRegex,
          `<mark class="highlight">$1</mark>`
        );
        match = true;
      }
      this.highlightedHeadings[index] = heading;

      /** ðŸ”¹ Body/content */
      let content = item.data || "";
      if (contentRegex.test(content)) {
        content = content.replace(
          contentRegex,
          `<mark class="highlight">$1</mark>`
        );
        match = true;
      }
      this.sanitizedHtml[index] =
        this.sanitizer.bypassSecurityTrustHtml(content);

      /** ðŸ”¹ Expand if matched */
      item.expanded = match;
    });
  });
}
