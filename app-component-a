import { Component, OnInit } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { SearchService } from '../search.service';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-component-a',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './component-a.component.html',
  styleUrls: ['./component-a.component.css']
})
export class ComponentAComponent implements OnInit {
  befits = [
    {
      id: 1,
      heading: 'Sample Heading',
      data: `<p>This is sample content about Angular search.</p>`,
      expanded: false,
    },
    {
      id: 2,
      heading: 'Test Block',
      data: `<div>Matching this should highlight and expand.</div>`,
      expanded: false,
    },
  ];

  sanitizedHtml: SafeHtml[] = [];
  highlightedHeadings: string[] = [];

  constructor(
    private sanitizer: DomSanitizer,
    private searchService: SearchService
  ) {}

  ngOnInit() {
    this.searchService.query$.subscribe(query => {
      const regex = new RegExp(`(${query})`, 'gi');
      this.sanitizedHtml = [];
      this.highlightedHeadings = [];

      this.befits.forEach((item, index) => {
        let match = false;

        // Highlight heading
        let heading = item.heading;
        if (query && heading.match(regex)) {
          heading = heading.replace(regex, '<mark class="highlight">$1</mark>');
          match = true;
        }
        this.highlightedHeadings[index] = heading;

        // Highlight data
        let content = item.data;
        if (query && content.match(regex)) {
          content = content.replace(regex, '<mark class="highlight">$1</mark>');
          match = true;
        }
        this.sanitizedHtml[index] = this.sanitizer.bypassSecurityTrustHtml(content);
        item.expanded = match;
      });

      setTimeout(() => {
        const elements = Array.from(document.querySelectorAll('.highlight')) as HTMLElement[];
        this.searchService.registerMatches(elements);
      });
    });
  }
}
