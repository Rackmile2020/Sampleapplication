import { Injectable, OnDestroy } from '@angular/core';
import { Observable, Subject } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class PostMessageService implements OnDestroy {
  private messageSubject = new Subject<MessageEvent>();
  private handler = this.onMessage.bind(this);

  constructor() {
    // Attach listener once at service creation
    window.addEventListener('message', this.handler);
  }

  private onMessage(event: MessageEvent) {
    // Optional: validate origin
    if (event.origin !== 'https://parent-domain.com') return;
    this.messageSubject.next(event);
  }

  /**
   * Public Observable for subscribers
   */
  get messages$(): Observable<MessageEvent> {
    return this.messageSubject.asObservable();
  }

  /**
   * Send message to parent
   */
  sendToParent(data: any, targetOrigin: string = 'https://parent-domain.com') {
    window.parent.postMessage(data, targetOrigin);
  }

  ngOnDestroy() {
    window.removeEventListener('message', this.handler);
    this.messageSubject.complete();
  }
}
