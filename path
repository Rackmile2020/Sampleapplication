export function getFullPath$(route: ActivatedRoute): Observable<FullRouteInfo> {
  function collectRoutes(r: ActivatedRoute): ActivatedRoute[] {
    const all: ActivatedRoute[] = [r];
    if (r.firstChild) {
      all.push(...collectRoutes(r.firstChild));
    }
    return all;
  }

  return combineLatest(
    collectRoutes(route).map(r =>
      combineLatest([r.paramMap, r.url]).pipe(
        map(([paramMap, urlSegments]) => ({
          params: Object.fromEntries(paramMap.keys.map(k => [k, paramMap.get(k)])),
          segments: urlSegments.map((s: UrlSegment) => s.path)
        }))
      )
    )
  ).pipe(
    map(results => {
      const allParams = results.reduce((acc, r) => ({ ...acc, ...r.params }), {});
      const fullPath = '/' + results.flatMap(r => r.segments).join('/');
      return { fullPath, allParams };
    })
  );
}

ngOnInit() {
  getFullPath$(this.route).subscribe(info => {
    console.log('Reactive Full Path:', info.fullPath);
    console.log('Reactive Params:', info.allParams);
  });
}
